{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/filter.module.css","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","redux/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","actions","addContact","createAction","deleteContact","changeFilter","contacts","createReducer","id","name","number","state","payload","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","reduxSrore","persistor","persistStore","getContacts","getFilter","getVisibleContact","contact","toLowerCase","includes","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleChange","event","target","value","validateForm","trim","onCheckContact","alert","isExistContact","find","reset","className","s","form","onSubmit","nameContact","preventDefault","uuidv4","input","type","placeholder","onChange","autoFocus","ContactList","onRemove","contactRemove","length","map","item","button","onClick","Filter","search","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9d1b4c58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1omCg\",\"input\":\"ContactForm_input__2HjJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3pP0L\",\"button\":\"ContactList_button__2IApF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"filter_search__qZzpx\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contact/add');\r\n\r\nconst deleteContact = createAction('contact/delete');\r\n\r\nconst changeFilter = createAction('contact/changeFilter');\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from 'redux/phonebook-actions';\r\n\r\nconst INITIAL_STATE = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(INITIAL_STATE, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactPersistConfig = {\r\n  key: 'contact',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    reducer: persistReducer(contactPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst reduxSrore = { store, persistor };\r\n\r\nexport default reduxSrore;\r\n","export const getContacts = state => state.reducer.contacts;\r\n\r\nexport const getFilter = state => state.reducer.filter;\r\n\r\nexport const getVisibleContact = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/phonebook-selectors';\nimport actions from 'redux/phonebook-actions';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  const onAddContact = nameContact => dispatch(actions.addContact(nameContact));\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isValidateForm = validateForm(name, number);\n    if (!isValidateForm) {\n      return;\n    }\n    onAddContact({ id: uuidv4(), name, number });\n    reset();\n  };\n\n  const validateForm = (name, number) => {\n    if (!name.trim() || !number.trim()) {\n      alert('Для добавления контакта заполните поля Name и Number');\n      return false;\n    }\n    return onCheckContact(name);\n  };\n\n  const onCheckContact = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    if (isExistContact) {\n      alert('Контакт с таким именем уже существует!');\n    }\n    return !isExistContact;\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            id={name}\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Введите имя контакта\"\n            onChange={handleChange}\n            autoFocus\n          />\n        </label>\n        <label>\n          Number\n          <input\n            id={number}\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"Введите номер контакта\"\n            onChange={handleChange}\n          />\n        </label>\n        <button>Add contact</button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from 'redux/phonebook-actions';\nimport { getVisibleContact } from 'redux/phonebook-selectors';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContact);\n  const dispatch = useDispatch();\n\n  const contactRemove = id => dispatch(actions.deleteContact(id));\n\n  const onRemove = id => contactRemove(id);\n\n  if (contacts.length === 0) return null;\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item}>\n          {name} : {number}\n          <button className={s.button} onClick={() => onRemove(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/phonebook-selectors';\nimport actions from 'redux/phonebook-actions';\nimport s from './filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => dispatch(actions.changeFilter(event.target.value));\n\n  return (\n    <>\n      <p className={s.search}>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </>\n  );\n}\n","import React from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}